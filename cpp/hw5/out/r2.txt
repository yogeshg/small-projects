# testing graph Node_graph
# value of v0x5adaaa0 [label="six:6"]; is [label="six:6"]
# value of v0x5adaaa0 [label="six:600"]; is [label="six:600"]
# value of v0x5ada820 -> v0x5ada920 [label="myedge:2"]; is [label="myedge:2"]
# top element is: v0x5adaa20 [label="five:5"];
# neighbors of v0x5ada920 [label="baz:3"]; are: 0
# number of vertices not reachable form this are: 0
# number of vertices not reachable form v0x5adaaa0 [label="six:600"]; are: 2
# number of vertices not reachable form v0x5adab20 [label="seven:7"]; are: 2
# number of vertices not reachable form v0x5ada920 [label="baz:3"]; are: 3
# is this graph fully reachable?: 1
# is this graph fully reachable from v0x5adab20 [label="seven:7"];?: 0
# top element is: v0x5adaa20 [label="five:5"];
# is there a cycle?: 0
# is there a cycle from v0x5ada9a0 [label="four:4"];?: 0
# are v0x5adaa20 [label="five:5"]; and v0x5adaaa0 [label="six:600"]; adjacent? : 1
# are v0x5adaa20 [label="five:5"]; and v0x5ada820 [label="foo:1"]; adjacent? : 0
# sorted vertices:
#	[label="five:5"]
#	[label="seven:7"]
#	[label="six:600"]
# sorted edges:
